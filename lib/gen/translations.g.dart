/// Generated file. Do not edit.
///
/// Original: lib/i18n
/// To regenerate, run: `dart run slang`
///
/// Locales: 2
/// Strings: 313 (156 per locale)
///
/// Built on 2024-01-23 at 20:08 UTC

// coverage:ignore-file
// ignore_for_file: type=lint

import 'package:flutter/widgets.dart';
import 'package:slang/api/translation_overrides.dart';
import 'package:slang/builder/model/build_model_config.dart';
import 'package:slang/builder/model/enums.dart';
import 'package:slang/builder/model/node.dart';
import 'package:slang_flutter/slang_flutter.dart';
export 'package:slang_flutter/slang_flutter.dart';

/// Generated by the "Translation Overrides" feature.
/// This config is needed to recreate the translation model exactly
/// the same way as this file was created.
final _buildConfig = BuildModelConfig(
	fallbackStrategy: FallbackStrategy.none,
	keyCase: null,
	keyMapCase: null,
	paramCase: null,
	stringInterpolation: StringInterpolation.dart,
	maps: [],
	pluralAuto: PluralAuto.cardinal,
	pluralParameter: 'n',
	pluralCardinal: [],
	pluralOrdinal: [],
	contexts: [],
	interfaces: [], // currently not supported
);

const AppLocale _baseLocale = AppLocale.es;

/// Supported locales, see extension methods below.
///
/// Usage:
/// - LocaleSettings.setLocale(AppLocale.es) // set locale
/// - Locale locale = AppLocale.es.flutterLocale // get flutter locale from enum
/// - if (LocaleSettings.currentLocale == AppLocale.es) // locale check
enum AppLocale with BaseAppLocale<AppLocale, _TranslationsEs> {
	es(languageCode: 'es', build: _TranslationsEs.build),
	en(languageCode: 'en', build: _TranslationsEn.build);

	const AppLocale({required this.languageCode, this.scriptCode, this.countryCode, required this.build}); // ignore: unused_element

	@override final String languageCode;
	@override final String? scriptCode;
	@override final String? countryCode;
	@override final TranslationBuilder<AppLocale, _TranslationsEs> build;

	/// Gets current instance managed by [LocaleSettings].
	_TranslationsEs get translations => LocaleSettings.instance.translationMap[this]!;
}

/// Method A: Simple
///
/// No rebuild after locale change.
/// Translation happens during initialization of the widget (call of translations).
/// Configurable via 'translate_var'.
///
/// Usage:
/// String a = translations.someKey.anotherKey;
/// String b = translations['someKey.anotherKey']; // Only for edge cases!
_TranslationsEs get translations => LocaleSettings.instance.currentTranslations;

/// Method B: Advanced
///
/// All widgets using this method will trigger a rebuild when locale changes.
/// Use this if you have e.g. a settings page where the user can select the locale during runtime.
///
/// Step 1:
/// wrap your App with
/// TranslationProvider(
/// 	child: MyApp()
/// );
///
/// Step 2:
/// final translations = Translations.of(context); // Get translations variable.
/// String a = translations.someKey.anotherKey; // Use translations variable.
/// String b = translations['someKey.anotherKey']; // Only for edge cases!
class Translations {
	Translations._(); // no constructor

	static _TranslationsEs of(BuildContext context) => InheritedLocaleData.of<AppLocale, _TranslationsEs>(context).translations;
}

/// The provider for method B
class TranslationProvider extends BaseTranslationProvider<AppLocale, _TranslationsEs> {
	TranslationProvider({required super.child}) : super(settings: LocaleSettings.instance);

	static InheritedLocaleData<AppLocale, _TranslationsEs> of(BuildContext context) => InheritedLocaleData.of<AppLocale, _TranslationsEs>(context);
}

/// Method B shorthand via [BuildContext] extension method.
/// Configurable via 'translate_var'.
///
/// Usage (e.g. in a widget's build method):
/// context.translations.someKey.anotherKey
extension BuildContextTranslationsExtension on BuildContext {
	_TranslationsEs get translations => TranslationProvider.of(this).translations;
}

/// Manages all translation instances and the current locale
class LocaleSettings extends BaseFlutterLocaleSettings<AppLocale, _TranslationsEs> {
	LocaleSettings._() : super(utils: AppLocaleUtils.instance);

	static final instance = LocaleSettings._();

	// static aliases (checkout base methods for documentation)
	static AppLocale get currentLocale => instance.currentLocale;
	static Stream<AppLocale> getLocaleStream() => instance.getLocaleStream();
	static AppLocale setLocale(AppLocale locale, {bool? listenToDeviceLocale = false}) => instance.setLocale(locale, listenToDeviceLocale: listenToDeviceLocale);
	static AppLocale setLocaleRaw(String rawLocale, {bool? listenToDeviceLocale = false}) => instance.setLocaleRaw(rawLocale, listenToDeviceLocale: listenToDeviceLocale);
	static AppLocale useDeviceLocale() => instance.useDeviceLocale();
	@Deprecated('Use [AppLocaleUtils.supportedLocales]') static List<Locale> get supportedLocales => instance.supportedLocales;
	@Deprecated('Use [AppLocaleUtils.supportedLocalesRaw]') static List<String> get supportedLocalesRaw => instance.supportedLocalesRaw;
	static void setPluralResolver({String? language, AppLocale? locale, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver}) => instance.setPluralResolver(
		language: language,
		locale: locale,
		cardinalResolver: cardinalResolver,
		ordinalResolver: ordinalResolver,
	);
	static void overrideTranslations({required AppLocale locale, required FileType fileType, required String content}) => instance.overrideTranslations(locale: locale, fileType: fileType, content: content);
	static void overrideTranslationsFromMap({required AppLocale locale, required bool isFlatMap, required Map map}) => instance.overrideTranslationsFromMap(locale: locale, isFlatMap: isFlatMap, map: map);
}

/// Provides utility functions without any side effects.
class AppLocaleUtils extends BaseAppLocaleUtils<AppLocale, _TranslationsEs> {
	AppLocaleUtils._() : super(baseLocale: _baseLocale, locales: AppLocale.values, buildConfig: _buildConfig);

	static final instance = AppLocaleUtils._();

	// static aliases (checkout base methods for documentation)
	static AppLocale parse(String rawLocale) => instance.parse(rawLocale);
	static AppLocale parseLocaleParts({required String languageCode, String? scriptCode, String? countryCode}) => instance.parseLocaleParts(languageCode: languageCode, scriptCode: scriptCode, countryCode: countryCode);
	static AppLocale findDeviceLocale() => instance.findDeviceLocale();
	static List<Locale> get supportedLocales => instance.supportedLocales;
	static List<String> get supportedLocalesRaw => instance.supportedLocalesRaw;
	static _TranslationsEs buildWithOverrides({required AppLocale locale, required FileType fileType, required String content, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver}) => instance.buildWithOverrides(locale: locale, fileType: fileType, content: content, cardinalResolver: cardinalResolver, ordinalResolver: ordinalResolver);
	static _TranslationsEs buildWithOverridesFromMap({required AppLocale locale, required bool isFlatMap, required Map map, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver}) => instance.buildWithOverridesFromMap(locale: locale, isFlatMap: isFlatMap, map: map, cardinalResolver: cardinalResolver, ordinalResolver: ordinalResolver);
}

// translations

// Path: <root>
class _TranslationsEs implements BaseTranslations<AppLocale, _TranslationsEs> {

	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	/// [AppLocaleUtils.buildWithOverrides] is recommended for overriding.
	_TranslationsEs.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: $meta = TranslationMetadata(
		    locale: AppLocale.es,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <es>.
	@override final TranslationMetadata<AppLocale, _TranslationsEs> $meta;

	/// Access flat map
	dynamic operator[](String key) => $meta.getTranslation(key);

	late final _TranslationsEs _root = this; // ignore: unused_field

	// Translations
	late final _TranslationsCommonEs common = _TranslationsCommonEs._(_root);
	late final _TranslationsSingInEs singIn = _TranslationsSingInEs._(_root);
	late final _TranslationsSplashEs splash = _TranslationsSplashEs._(_root);
	late final _TranslationsConsortiumEs consortium = _TranslationsConsortiumEs._(_root);
	late final _TranslationsGroupEs group = _TranslationsGroupEs._(_root);
	late final _TranslationsLotteryEs lottery = _TranslationsLotteryEs._(_root);
	late final _TranslationsStandEs stand = _TranslationsStandEs._(_root);
	late final _TranslationsMonitoringEs monitoring = _TranslationsMonitoringEs._(_root);
	late final _TranslationsTicketEs ticket = _TranslationsTicketEs._(_root);
	late final _TranslationsSalesEs sales = _TranslationsSalesEs._(_root);
	late final _TranslationsResultEs result = _TranslationsResultEs._(_root);
	late final _TranslationsSettingsEs settings = _TranslationsSettingsEs._(_root);
}

// Path: common
class _TranslationsCommonEs {
	_TranslationsCommonEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get back => TranslationOverrides.string(_root.$meta, 'common.back', {}) ?? 'Atrás';
	String get next => TranslationOverrides.string(_root.$meta, 'common.next', {}) ?? 'Continuar';
	String get done => TranslationOverrides.string(_root.$meta, 'common.done', {}) ?? 'Completar';
	String get save => TranslationOverrides.string(_root.$meta, 'common.save', {}) ?? 'Aplicar';
	String get remove => TranslationOverrides.string(_root.$meta, 'common.remove', {}) ?? 'Eliminar';
	String get signOut => TranslationOverrides.string(_root.$meta, 'common.signOut', {}) ?? 'Cerrar sesión';
	String get edit => TranslationOverrides.string(_root.$meta, 'common.edit', {}) ?? 'Editar';
}

// Path: singIn
class _TranslationsSingInEs {
	_TranslationsSingInEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get messageTitle => TranslationOverrides.string(_root.$meta, 'singIn.messageTitle', {}) ?? 'Inicio de sesión';
	String get messageContent => TranslationOverrides.string(_root.$meta, 'singIn.messageContent', {}) ?? 'Si has olvidado tu contraseña o tienes dificultades para iniciar sesión, no dudes en ponerte en contacto con tu supervisor para recibir asistencia.';
	String get signIn => TranslationOverrides.string(_root.$meta, 'singIn.signIn', {}) ?? 'Iniciar sesión';
	String get username => TranslationOverrides.string(_root.$meta, 'singIn.username', {}) ?? 'Usuario';
	String get password => TranslationOverrides.string(_root.$meta, 'singIn.password', {}) ?? 'Contraseña';
}

// Path: splash
class _TranslationsSplashEs {
	_TranslationsSplashEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get notConsortiumErrorMessage => TranslationOverrides.string(_root.$meta, 'splash.notConsortiumErrorMessage', {}) ?? 'Este usuario actualmente no está asociado a ningún consorcio.';
}

// Path: consortium
class _TranslationsConsortiumEs {
	_TranslationsConsortiumEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get name => TranslationOverrides.string(_root.$meta, 'consortium.name', {}) ?? 'Nombre del consorcio';
	String get maximumSaleAmount => TranslationOverrides.string(_root.$meta, 'consortium.maximumSaleAmount', {}) ?? 'Monto máximo de venta';
	String get quinielaMaxAmount => TranslationOverrides.string(_root.$meta, 'consortium.quinielaMaxAmount', {}) ?? 'Monto máximo de quiniela';
	String get paleMaxAmount => TranslationOverrides.string(_root.$meta, 'consortium.paleMaxAmount', {}) ?? 'Monto máximo de pale';
	String get tripletaMaxAmount => TranslationOverrides.string(_root.$meta, 'consortium.tripletaMaxAmount', {}) ?? 'Monto máximo de tripleta';
	String get success => TranslationOverrides.string(_root.$meta, 'consortium.success', {}) ?? 'Consorcio actualizado';
	String get empty => TranslationOverrides.string(_root.$meta, 'consortium.empty', {}) ?? 'No se encuentra el consorcio asociado';
}

// Path: group
class _TranslationsGroupEs {
	_TranslationsGroupEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get title => TranslationOverrides.string(_root.$meta, 'group.title', {}) ?? 'Grupos';
	String get detail => TranslationOverrides.string(_root.$meta, 'group.detail', {}) ?? 'Detalles';
	String get prizes => TranslationOverrides.string(_root.$meta, 'group.prizes', {}) ?? 'Premios';
	String get constraints => TranslationOverrides.string(_root.$meta, 'group.constraints', {}) ?? 'Restricciones';
	String get name => TranslationOverrides.string(_root.$meta, 'group.name', {}) ?? 'Nombre';
	String get selectAGroup => TranslationOverrides.string(_root.$meta, 'group.selectAGroup', {}) ?? 'No hay grupo seleccionado';
	String get maximumSaleAmount => TranslationOverrides.string(_root.$meta, 'group.maximumSaleAmount', {}) ?? 'Monto máximo de venta';
	String get quinielaMaxAmount => TranslationOverrides.string(_root.$meta, 'group.quinielaMaxAmount', {}) ?? 'Monto máximo de quiniela';
	String get paleMaxAmount => TranslationOverrides.string(_root.$meta, 'group.paleMaxAmount', {}) ?? 'Monto máximo de pale';
	String get tripletaMaxAmount => TranslationOverrides.string(_root.$meta, 'group.tripletaMaxAmount', {}) ?? 'Monto máximo de tripleta';
	String get empty => TranslationOverrides.string(_root.$meta, 'group.empty', {}) ?? 'No hay grupos creados';
	String get add => TranslationOverrides.string(_root.$meta, 'group.add', {}) ?? 'Añadir';
	String get edit => TranslationOverrides.string(_root.$meta, 'group.edit', {}) ?? 'Editar';
	String get delete => TranslationOverrides.string(_root.$meta, 'group.delete', {}) ?? 'Borrar';
	String get createdSuccess => TranslationOverrides.string(_root.$meta, 'group.createdSuccess', {}) ?? 'Grupo creado';
	String get updateSuccess => TranslationOverrides.string(_root.$meta, 'group.updateSuccess', {}) ?? 'Grupo actualizado';
	String get deleteSuccess => TranslationOverrides.string(_root.$meta, 'group.deleteSuccess', {}) ?? 'Grupo borrado';
	String get active => TranslationOverrides.string(_root.$meta, 'group.active', {}) ?? 'Activo';
	String get deleteTitle => TranslationOverrides.string(_root.$meta, 'group.deleteTitle', {}) ?? 'Estas seguro de borrar este grupo';
	String get deleteContent => TranslationOverrides.string(_root.$meta, 'group.deleteContent', {}) ?? 'Solo se pueden borrar grupos que no tengan una banca relacionadas';
	late final _TranslationsGroupConstraintFormEs constraintForm = _TranslationsGroupConstraintFormEs._(_root);
}

// Path: lottery
class _TranslationsLotteryEs {
	_TranslationsLotteryEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get title => TranslationOverrides.string(_root.$meta, 'lottery.title', {}) ?? 'Loterías';
	String get detail => TranslationOverrides.string(_root.$meta, 'lottery.detail', {}) ?? 'Detalles';
	String get schedules => TranslationOverrides.string(_root.$meta, 'lottery.schedules', {}) ?? 'Horarios';
	String get isClosed => TranslationOverrides.string(_root.$meta, 'lottery.isClosed', {}) ?? 'Cerrada';
	String get name => TranslationOverrides.string(_root.$meta, 'lottery.name', {}) ?? 'Nombre';
	String get success => TranslationOverrides.string(_root.$meta, 'lottery.success', {}) ?? 'Lotería actualizada';
	String get active => TranslationOverrides.string(_root.$meta, 'lottery.active', {}) ?? 'Activo';
	String get edit => TranslationOverrides.string(_root.$meta, 'lottery.edit', {}) ?? 'Editar';
	String get add => TranslationOverrides.string(_root.$meta, 'lottery.add', {}) ?? 'Añadir';
	String get scheduleEmpty => TranslationOverrides.string(_root.$meta, 'lottery.scheduleEmpty', {}) ?? 'No hay horarios creados';
	String get effectiveDate => TranslationOverrides.string(_root.$meta, 'lottery.effectiveDate', {}) ?? 'Fecha de vigencia';
	String get removeScheduleTitle => TranslationOverrides.string(_root.$meta, 'lottery.removeScheduleTitle', {}) ?? '¿Estas seguro de borrar este horario?';
	String get removeScheduleContent => TranslationOverrides.string(_root.$meta, 'lottery.removeScheduleContent', {}) ?? 'No podras recuperar este horario';
	String get selectALottery => TranslationOverrides.string(_root.$meta, 'lottery.selectALottery', {}) ?? 'No hay lotería seleccionada';
	String get quinielaFirstPrize => TranslationOverrides.string(_root.$meta, 'lottery.quinielaFirstPrize', {}) ?? 'Quiniela 1er premio';
	String get quinielaSecondPrize => TranslationOverrides.string(_root.$meta, 'lottery.quinielaSecondPrize', {}) ?? 'Quiniela 2da premio';
	String get quinielaThirdPrize => TranslationOverrides.string(_root.$meta, 'lottery.quinielaThirdPrize', {}) ?? 'Quiniela 3ra premio';
	String get paleFirstSecondPrize => TranslationOverrides.string(_root.$meta, 'lottery.paleFirstSecondPrize', {}) ?? 'Pale 1er & 2da premio';
	String get paleFirstThirdPrize => TranslationOverrides.string(_root.$meta, 'lottery.paleFirstThirdPrize', {}) ?? 'Pale 1er & 3da premio';
	String get paleSecondThirdPrize => TranslationOverrides.string(_root.$meta, 'lottery.paleSecondThirdPrize', {}) ?? 'Pale 2da & 3ra premio';
	String get tripletaPrice => TranslationOverrides.string(_root.$meta, 'lottery.tripletaPrice', {}) ?? 'Tripleta premio';
	String get timeOpen => TranslationOverrides.string(_root.$meta, 'lottery.timeOpen', {}) ?? 'Hora de apertura';
	String get timeClose => TranslationOverrides.string(_root.$meta, 'lottery.timeClose', {}) ?? 'Hora de cierre';
}

// Path: stand
class _TranslationsStandEs {
	_TranslationsStandEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get title => TranslationOverrides.string(_root.$meta, 'stand.title', {}) ?? 'Bancas';
	String get detail => TranslationOverrides.string(_root.$meta, 'stand.detail', {}) ?? 'Detalles';
	String get prizes => TranslationOverrides.string(_root.$meta, 'stand.prizes', {}) ?? 'Premios';
	String get constraints => TranslationOverrides.string(_root.$meta, 'stand.constraints', {}) ?? 'Restricciones';
	String get name => TranslationOverrides.string(_root.$meta, 'stand.name', {}) ?? 'Nombre';
	String get group => TranslationOverrides.string(_root.$meta, 'stand.group', {}) ?? 'Grupo';
	String get selectAStand => TranslationOverrides.string(_root.$meta, 'stand.selectAStand', {}) ?? 'No hay banca seleccionada';
	String get contraint => TranslationOverrides.string(_root.$meta, 'stand.contraint', {}) ?? 'Restrinción';
	String get username => TranslationOverrides.string(_root.$meta, 'stand.username', {}) ?? 'Usuario';
	String get maximumSaleAmount => TranslationOverrides.string(_root.$meta, 'stand.maximumSaleAmount', {}) ?? 'Monto máximo de venta';
	String get maximumCancellationAmount => TranslationOverrides.string(_root.$meta, 'stand.maximumCancellationAmount', {}) ?? 'Monto máximo de cancelación';
	String get quinielaMaxAmount => TranslationOverrides.string(_root.$meta, 'stand.quinielaMaxAmount', {}) ?? 'Monto máximo de quiniela';
	String get paleMaxAmount => TranslationOverrides.string(_root.$meta, 'stand.paleMaxAmount', {}) ?? 'Monto máximo de pale';
	String get tripletaMaxAmount => TranslationOverrides.string(_root.$meta, 'stand.tripletaMaxAmount', {}) ?? 'Monto máximo de tripleta';
	late final _TranslationsStandConstraintFormEs constraintForm = _TranslationsStandConstraintFormEs._(_root);
	String get active => TranslationOverrides.string(_root.$meta, 'stand.active', {}) ?? 'Activo';
}

// Path: monitoring
class _TranslationsMonitoringEs {
	_TranslationsMonitoringEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get dateForm => TranslationOverrides.string(_root.$meta, 'monitoring.dateForm', {}) ?? 'Fecha';
	String get dateToday => TranslationOverrides.string(_root.$meta, 'monitoring.dateToday', {}) ?? 'Hoy';
	String get dateYesterday => TranslationOverrides.string(_root.$meta, 'monitoring.dateYesterday', {}) ?? 'Ayer';
	String get dateWeek => TranslationOverrides.string(_root.$meta, 'monitoring.dateWeek', {}) ?? 'Semana';
	String get dateMonth => TranslationOverrides.string(_root.$meta, 'monitoring.dateMonth', {}) ?? 'Mes';
	String get dateYear => TranslationOverrides.string(_root.$meta, 'monitoring.dateYear', {}) ?? 'Año';
	String get orderForm => TranslationOverrides.string(_root.$meta, 'monitoring.orderForm', {}) ?? 'Orden';
	String get orderQuantity => TranslationOverrides.string(_root.$meta, 'monitoring.orderQuantity', {}) ?? 'Cantidad';
	String get orderAmount => TranslationOverrides.string(_root.$meta, 'monitoring.orderAmount', {}) ?? 'Monto';
	String get quiniela => TranslationOverrides.string(_root.$meta, 'monitoring.quiniela', {}) ?? 'Quiniela';
	String get pale => TranslationOverrides.string(_root.$meta, 'monitoring.pale', {}) ?? 'Pale';
	String get tripleta => TranslationOverrides.string(_root.$meta, 'monitoring.tripleta', {}) ?? 'Tripleta';
	String get playEmpty => TranslationOverrides.string(_root.$meta, 'monitoring.playEmpty', {}) ?? 'No hay jugadas';
}

// Path: ticket
class _TranslationsTicketEs {
	_TranslationsTicketEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get title => TranslationOverrides.string(_root.$meta, 'ticket.title', {}) ?? 'Tickets';
	String get detail => TranslationOverrides.string(_root.$meta, 'ticket.detail', {}) ?? 'Detalles';
	String get number => TranslationOverrides.string(_root.$meta, 'ticket.number', {}) ?? 'Número';
	String get group => TranslationOverrides.string(_root.$meta, 'ticket.group', {}) ?? 'Grupo';
	String get stand => TranslationOverrides.string(_root.$meta, 'ticket.stand', {}) ?? 'Banco';
	String get lottery => TranslationOverrides.string(_root.$meta, 'ticket.lottery', {}) ?? 'Lotería';
	String get play => TranslationOverrides.string(_root.$meta, 'ticket.play', {}) ?? 'Jugada';
	String get playAmount => TranslationOverrides.string(_root.$meta, 'ticket.playAmount', {}) ?? 'Monto';
	String get subtotalAmount => TranslationOverrides.string(_root.$meta, 'ticket.subtotalAmount', {}) ?? 'Subtotal';
	String get status => TranslationOverrides.string(_root.$meta, 'ticket.status', {}) ?? 'Estado';
	String get cancelAction => TranslationOverrides.string(_root.$meta, 'ticket.cancelAction', {}) ?? 'Anular';
	String get cancelActionTitle => TranslationOverrides.string(_root.$meta, 'ticket.cancelActionTitle', {}) ?? 'Confirmar Anulación del Ticket';
	String get cancelActionContent => TranslationOverrides.string(_root.$meta, 'ticket.cancelActionContent', {}) ?? 'Esta acción no se puede deshacer. ¿Estás seguro?';
	String get cancelSuccess => TranslationOverrides.string(_root.$meta, 'ticket.cancelSuccess', {}) ?? 'Ticket anulado';
	String get showDetails => TranslationOverrides.string(_root.$meta, 'ticket.showDetails', {}) ?? 'Ver detalles';
	String get empty => TranslationOverrides.string(_root.$meta, 'ticket.empty', {}) ?? 'No hay tickets disponibles';
	String get selectATicket => TranslationOverrides.string(_root.$meta, 'ticket.selectATicket', {}) ?? 'No hay ticket seleccionado';
	String get total => TranslationOverrides.string(_root.$meta, 'ticket.total', {}) ?? 'Total';
	String get date => TranslationOverrides.string(_root.$meta, 'ticket.date', {}) ?? 'Fecha';
	String get all => TranslationOverrides.string(_root.$meta, 'ticket.all', {}) ?? 'Todos';
	String get stands => TranslationOverrides.string(_root.$meta, 'ticket.stands', {}) ?? 'Bancas';
}

// Path: sales
class _TranslationsSalesEs {
	_TranslationsSalesEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get title => TranslationOverrides.string(_root.$meta, 'sales.title', {}) ?? 'Ventas';
	String get stand => TranslationOverrides.string(_root.$meta, 'sales.stand', {}) ?? 'Bancas';
	String get options => TranslationOverrides.string(_root.$meta, 'sales.options', {}) ?? 'Opciones';
	String get all => TranslationOverrides.string(_root.$meta, 'sales.all', {}) ?? 'Todas';
	String get date => TranslationOverrides.string(_root.$meta, 'sales.date', {}) ?? 'Fecha';
	String get groups => TranslationOverrides.string(_root.$meta, 'sales.groups', {}) ?? 'Grupos';
	String get lotteries => TranslationOverrides.string(_root.$meta, 'sales.lotteries', {}) ?? 'Loterías';
	String get bank => TranslationOverrides.string(_root.$meta, 'sales.bank', {}) ?? 'Bancas';
	String get sales => TranslationOverrides.string(_root.$meta, 'sales.sales', {}) ?? 'Ganancias';
	String get prizes => TranslationOverrides.string(_root.$meta, 'sales.prizes', {}) ?? 'Premios';
	String get balance => TranslationOverrides.string(_root.$meta, 'sales.balance', {}) ?? 'Balance';
	String get total => TranslationOverrides.string(_root.$meta, 'sales.total', {}) ?? 'Total';
}

// Path: result
class _TranslationsResultEs {
	_TranslationsResultEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get add => TranslationOverrides.string(_root.$meta, 'result.add', {}) ?? 'Añadir';
	String get edit => TranslationOverrides.string(_root.$meta, 'result.edit', {}) ?? 'Editar';
	String get date => TranslationOverrides.string(_root.$meta, 'result.date', {}) ?? 'Fecha';
	String get lottery => TranslationOverrides.string(_root.$meta, 'result.lottery', {}) ?? 'Lotería';
	String get group => TranslationOverrides.string(_root.$meta, 'result.group', {}) ?? 'Grupo';
	String get stand => TranslationOverrides.string(_root.$meta, 'result.stand', {}) ?? 'Banco';
	String get firstPrize => TranslationOverrides.string(_root.$meta, 'result.firstPrize', {}) ?? 'Primer número';
	String get secondPrize => TranslationOverrides.string(_root.$meta, 'result.secondPrize', {}) ?? 'Segundo número';
	String get thirdPrize => TranslationOverrides.string(_root.$meta, 'result.thirdPrize', {}) ?? 'Tercer número';
	String get empty => TranslationOverrides.string(_root.$meta, 'result.empty', {}) ?? 'No hay resultados disponibles';
	late final _TranslationsResultConfirmationEs confirmation = _TranslationsResultConfirmationEs._(_root);
}

// Path: settings
class _TranslationsSettingsEs {
	_TranslationsSettingsEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get title => TranslationOverrides.string(_root.$meta, 'settings.title', {}) ?? 'Configuración';
	String get theme => TranslationOverrides.string(_root.$meta, 'settings.theme', {}) ?? 'Tema';
	String get dark => TranslationOverrides.string(_root.$meta, 'settings.dark', {}) ?? 'Oscuro';
	String get light => TranslationOverrides.string(_root.$meta, 'settings.light', {}) ?? 'Claro';
	String get success => TranslationOverrides.string(_root.$meta, 'settings.success', {}) ?? 'Configuración actualizada';
	late final _TranslationsSettingsOptionsEs options = _TranslationsSettingsOptionsEs._(_root);
}

// Path: group.constraintForm
class _TranslationsGroupConstraintFormEs {
	_TranslationsGroupConstraintFormEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get title => TranslationOverrides.string(_root.$meta, 'group.constraintForm.title', {}) ?? 'Añadir Restricciones';
	String get amount => TranslationOverrides.string(_root.$meta, 'group.constraintForm.amount', {}) ?? 'Monto';
	String get empty => TranslationOverrides.string(_root.$meta, 'group.constraintForm.empty', {}) ?? 'No hay restricciones creadas';
	String get from => TranslationOverrides.string(_root.$meta, 'group.constraintForm.from', {}) ?? 'Desde';
	String get to => TranslationOverrides.string(_root.$meta, 'group.constraintForm.to', {}) ?? 'Hasta (Opcional)';
}

// Path: stand.constraintForm
class _TranslationsStandConstraintFormEs {
	_TranslationsStandConstraintFormEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get title => TranslationOverrides.string(_root.$meta, 'stand.constraintForm.title', {}) ?? 'Añadir Restricciones';
	String get amount => TranslationOverrides.string(_root.$meta, 'stand.constraintForm.amount', {}) ?? 'Monto';
	String get empty => TranslationOverrides.string(_root.$meta, 'stand.constraintForm.empty', {}) ?? 'No hay restricciones creadas';
	String get from => TranslationOverrides.string(_root.$meta, 'stand.constraintForm.from', {}) ?? 'Desde';
	String get to => TranslationOverrides.string(_root.$meta, 'stand.constraintForm.to', {}) ?? 'Hasta (Opcional)';
}

// Path: result.confirmation
class _TranslationsResultConfirmationEs {
	_TranslationsResultConfirmationEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get title => TranslationOverrides.string(_root.$meta, 'result.confirmation.title', {}) ?? '¿Estás seguro de que deseas confirmar los resultados?';
	String get yes => TranslationOverrides.string(_root.$meta, 'result.confirmation.yes', {}) ?? 'Si';
	String get no => TranslationOverrides.string(_root.$meta, 'result.confirmation.no', {}) ?? 'No';
}

// Path: settings.options
class _TranslationsSettingsOptionsEs {
	_TranslationsSettingsOptionsEs._(this._root);

	final _TranslationsEs _root; // ignore: unused_field

	// Translations
	String get tickets => TranslationOverrides.string(_root.$meta, 'settings.options.tickets', {}) ?? 'Tickets';
	String get stand => TranslationOverrides.string(_root.$meta, 'settings.options.stand', {}) ?? 'Bancas';
	String get lottery => TranslationOverrides.string(_root.$meta, 'settings.options.lottery', {}) ?? 'Loterías';
	String get group => TranslationOverrides.string(_root.$meta, 'settings.options.group', {}) ?? 'Grupos';
	String get consortium => TranslationOverrides.string(_root.$meta, 'settings.options.consortium', {}) ?? 'Consorcio';
}

// Path: <root>
class _TranslationsEn implements _TranslationsEs {

	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	/// [AppLocaleUtils.buildWithOverrides] is recommended for overriding.
	_TranslationsEn.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: $meta = TranslationMetadata(
		    locale: AppLocale.en,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <en>.
	@override final TranslationMetadata<AppLocale, _TranslationsEs> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _TranslationsEn _root = this; // ignore: unused_field

	// Translations
	@override late final _TranslationsCommonEn common = _TranslationsCommonEn._(_root);
	@override late final _TranslationsSignInEn signIn = _TranslationsSignInEn._(_root);
	@override late final _TranslationsSplashEn splash = _TranslationsSplashEn._(_root);
	@override late final _TranslationsConsortiumEn consortium = _TranslationsConsortiumEn._(_root);
	@override late final _TranslationsGroupEn group = _TranslationsGroupEn._(_root);
	@override late final _TranslationsLotteryEn lottery = _TranslationsLotteryEn._(_root);
	@override late final _TranslationsStandEn stand = _TranslationsStandEn._(_root);
	@override late final _TranslationsMonitoringEn monitoring = _TranslationsMonitoringEn._(_root);
	@override late final _TranslationsTicketEn ticket = _TranslationsTicketEn._(_root);
	@override late final _TranslationsSalesEn sales = _TranslationsSalesEn._(_root);
	@override late final _TranslationsResultEn result = _TranslationsResultEn._(_root);
	@override late final _TranslationsSettingsEn settings = _TranslationsSettingsEn._(_root);
}

// Path: common
class _TranslationsCommonEn implements _TranslationsCommonEs {
	_TranslationsCommonEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get back => TranslationOverrides.string(_root.$meta, 'common.back', {}) ?? 'Back';
	@override String get next => TranslationOverrides.string(_root.$meta, 'common.next', {}) ?? 'Next';
	@override String get done => TranslationOverrides.string(_root.$meta, 'common.done', {}) ?? 'Done';
	@override String get save => TranslationOverrides.string(_root.$meta, 'common.save', {}) ?? 'Apply';
	@override String get remove => TranslationOverrides.string(_root.$meta, 'common.remove', {}) ?? 'Delete';
	@override String get signOut => TranslationOverrides.string(_root.$meta, 'common.signOut', {}) ?? 'Sign out';
	@override String get edit => TranslationOverrides.string(_root.$meta, 'common.edit', {}) ?? 'Edit';
}

// Path: signIn
class _TranslationsSignInEn implements _TranslationsSignInEs {
	_TranslationsSignInEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get messageTitle => TranslationOverrides.string(_root.$meta, 'signIn.messageTitle', {}) ?? 'Sign-In';
	@override String get messageContent => TranslationOverrides.string(_root.$meta, 'signIn.messageContent', {}) ?? 'If you have forgotten your password or are experiencing difficulties in signing in, feel free to get in touch with your supervisor for assistance.';
	@override String get signIn => TranslationOverrides.string(_root.$meta, 'signIn.signIn', {}) ?? 'Sign In';
	@override String get username => TranslationOverrides.string(_root.$meta, 'signIn.username', {}) ?? 'Username';
	@override String get password => TranslationOverrides.string(_root.$meta, 'signIn.password', {}) ?? 'Password';
}

// Path: splash
class _TranslationsSplashEn implements _TranslationsSplashEs {
	_TranslationsSplashEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get notConsortiumErrorMessage => TranslationOverrides.string(_root.$meta, 'splash.notConsortiumErrorMessage', {}) ?? 'This user is currently not assigned to any consortium.';
}

// Path: consortium
class _TranslationsConsortiumEn implements _TranslationsConsortiumEs {
	_TranslationsConsortiumEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get name => TranslationOverrides.string(_root.$meta, 'consortium.name', {}) ?? 'Consortium Name';
	@override String get maximumSaleAmount => TranslationOverrides.string(_root.$meta, 'consortium.maximumSaleAmount', {}) ?? 'Maximum Sale Amount';
	@override String get quinielaMaxAmount => TranslationOverrides.string(_root.$meta, 'consortium.quinielaMaxAmount', {}) ?? 'Maximum Quiniela Amount';
	@override String get paleMaxAmount => TranslationOverrides.string(_root.$meta, 'consortium.paleMaxAmount', {}) ?? 'Maximum Pale Amount';
	@override String get tripletaMaxAmount => TranslationOverrides.string(_root.$meta, 'consortium.tripletaMaxAmount', {}) ?? 'Maximum Triplet Amount';
	@override String get success => TranslationOverrides.string(_root.$meta, 'consortium.success', {}) ?? 'Consortium updated';
	@override String get empty => TranslationOverrides.string(_root.$meta, 'consortium.empty', {}) ?? 'No associated consortium found';
}

// Path: group
class _TranslationsGroupEn implements _TranslationsGroupEs {
	_TranslationsGroupEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get title => TranslationOverrides.string(_root.$meta, 'group.title', {}) ?? 'Groups';
	@override String get detail => TranslationOverrides.string(_root.$meta, 'group.detail', {}) ?? 'Details';
	@override String get prizes => TranslationOverrides.string(_root.$meta, 'group.prizes', {}) ?? 'Prizes';
	@override String get constraints => TranslationOverrides.string(_root.$meta, 'group.constraints', {}) ?? 'Constraints';
	@override String get name => TranslationOverrides.string(_root.$meta, 'group.name', {}) ?? 'Name';
	@override String get selectAGroup => TranslationOverrides.string(_root.$meta, 'group.selectAGroup', {}) ?? 'No group selected';
	@override String get add => TranslationOverrides.string(_root.$meta, 'group.add', {}) ?? 'Add';
	@override String get edit => TranslationOverrides.string(_root.$meta, 'group.edit', {}) ?? 'Edit';
	@override String get delete => TranslationOverrides.string(_root.$meta, 'group.delete', {}) ?? 'Delete';
	@override String get maximumSaleAmount => TranslationOverrides.string(_root.$meta, 'group.maximumSaleAmount', {}) ?? 'Maximum sale amount';
	@override String get quinielaMaxAmount => TranslationOverrides.string(_root.$meta, 'group.quinielaMaxAmount', {}) ?? 'Maximum quiniela amount';
	@override String get paleMaxAmount => TranslationOverrides.string(_root.$meta, 'group.paleMaxAmount', {}) ?? 'Maximum pale amount';
	@override String get tripletaMaxAmount => TranslationOverrides.string(_root.$meta, 'group.tripletaMaxAmount', {}) ?? 'Maximum triplet amount';
	@override String get empty => TranslationOverrides.string(_root.$meta, 'group.empty', {}) ?? 'No groups created';
	@override String get createdSuccess => TranslationOverrides.string(_root.$meta, 'group.createdSuccess', {}) ?? 'Group created';
	@override String get updateSuccess => TranslationOverrides.string(_root.$meta, 'group.updateSuccess', {}) ?? 'Group updated';
	@override String get deleteSuccess => TranslationOverrides.string(_root.$meta, 'group.deleteSuccess', {}) ?? 'Group deleted';
	@override String get active => TranslationOverrides.string(_root.$meta, 'group.active', {}) ?? 'Active';
	@override String get deleteTitle => TranslationOverrides.string(_root.$meta, 'group.deleteTitle', {}) ?? 'Are you sure you want to delete this group';
	@override String get deleteContent => TranslationOverrides.string(_root.$meta, 'group.deleteContent', {}) ?? 'Only groups without associated benches can be deleted';
	@override late final _TranslationsGroupConstraintFormEn constraintForm = _TranslationsGroupConstraintFormEn._(_root);
}

// Path: lottery
class _TranslationsLotteryEn implements _TranslationsLotteryEs {
	_TranslationsLotteryEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get title => TranslationOverrides.string(_root.$meta, 'lottery.title', {}) ?? 'Lotteries';
	@override String get details => TranslationOverrides.string(_root.$meta, 'lottery.details', {}) ?? 'Details';
	@override String get schedules => TranslationOverrides.string(_root.$meta, 'lottery.schedules', {}) ?? 'Schedules';
	@override String get isClosed => TranslationOverrides.string(_root.$meta, 'lottery.isClosed', {}) ?? 'Closed';
	@override String get name => TranslationOverrides.string(_root.$meta, 'lottery.name', {}) ?? 'Name';
	@override String get success => TranslationOverrides.string(_root.$meta, 'lottery.success', {}) ?? 'Lottery updated';
	@override String get active => TranslationOverrides.string(_root.$meta, 'lottery.active', {}) ?? 'Active';
	@override String get add => TranslationOverrides.string(_root.$meta, 'lottery.add', {}) ?? 'Add';
	@override String get scheduleEmpty => TranslationOverrides.string(_root.$meta, 'lottery.scheduleEmpty', {}) ?? 'No schedules created';
	@override String get effectiveDate => TranslationOverrides.string(_root.$meta, 'lottery.effectiveDate', {}) ?? 'Effective Date';
	@override String get removeScheduleTitle => TranslationOverrides.string(_root.$meta, 'lottery.removeScheduleTitle', {}) ?? 'Are you sure you want to delete this schedule?';
	@override String get removeScheduleContent => TranslationOverrides.string(_root.$meta, 'lottery.removeScheduleContent', {}) ?? 'No schedule can be restored';
	@override String get selectALottery => TranslationOverrides.string(_root.$meta, 'lottery.selectALottery', {}) ?? 'No lottery selected';
	@override String get quinielaFirstPrize => TranslationOverrides.string(_root.$meta, 'lottery.quinielaFirstPrize', {}) ?? 'Quiniela 1st prize';
	@override String get quinielaSecondPrize => TranslationOverrides.string(_root.$meta, 'lottery.quinielaSecondPrize', {}) ?? 'Quiniela 2nd prize';
	@override String get quinielaThirdPrize => TranslationOverrides.string(_root.$meta, 'lottery.quinielaThirdPrize', {}) ?? 'Quiniela 3rd prize';
	@override String get paleFirstSecondPrize => TranslationOverrides.string(_root.$meta, 'lottery.paleFirstSecondPrize', {}) ?? 'Pale 1st & 2nd prize';
	@override String get paleFirstThirdPrize => TranslationOverrides.string(_root.$meta, 'lottery.paleFirstThirdPrize', {}) ?? 'Pale 1st & 3rd prize';
	@override String get paleSecondThirdPrize => TranslationOverrides.string(_root.$meta, 'lottery.paleSecondThirdPrize', {}) ?? 'Pale 2nd & 3rd prize';
	@override String get tripletaPrice => TranslationOverrides.string(_root.$meta, 'lottery.tripletaPrice', {}) ?? 'Tripleta prize';
	@override String get timeOpen => TranslationOverrides.string(_root.$meta, 'lottery.timeOpen', {}) ?? 'Opening time';
	@override String get timeClose => TranslationOverrides.string(_root.$meta, 'lottery.timeClose', {}) ?? 'Closing time';
}

// Path: stand
class _TranslationsStandEn implements _TranslationsStandEs {
	_TranslationsStandEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get title => TranslationOverrides.string(_root.$meta, 'stand.title', {}) ?? 'Stands';
	@override String get detail => TranslationOverrides.string(_root.$meta, 'stand.detail', {}) ?? 'Details';
	@override String get prizes => TranslationOverrides.string(_root.$meta, 'stand.prizes', {}) ?? 'Prizes';
	@override String get constraints => TranslationOverrides.string(_root.$meta, 'stand.constraints', {}) ?? 'Constraints';
	@override String get name => TranslationOverrides.string(_root.$meta, 'stand.name', {}) ?? 'Name';
	@override String get group => TranslationOverrides.string(_root.$meta, 'stand.group', {}) ?? 'Group';
	@override String get selectAStand => TranslationOverrides.string(_root.$meta, 'stand.selectAStand', {}) ?? 'No stand selected';
	@override String get contraint => TranslationOverrides.string(_root.$meta, 'stand.contraint', {}) ?? 'Constraint';
	@override String get username => TranslationOverrides.string(_root.$meta, 'stand.username', {}) ?? 'Username';
	@override String get maximumSaleAmount => TranslationOverrides.string(_root.$meta, 'stand.maximumSaleAmount', {}) ?? 'Maximum sale amount';
	@override String get maximumCancellationAmount => TranslationOverrides.string(_root.$meta, 'stand.maximumCancellationAmount', {}) ?? 'Maximum cancellation amount';
	@override String get quinielaMaxAmount => TranslationOverrides.string(_root.$meta, 'stand.quinielaMaxAmount', {}) ?? 'Maximum quiniela amount';
	@override String get paleMaxAmount => TranslationOverrides.string(_root.$meta, 'stand.paleMaxAmount', {}) ?? 'Maximum pale amount';
	@override String get tripletaMaxAmount => TranslationOverrides.string(_root.$meta, 'stand.tripletaMaxAmount', {}) ?? 'Maximum triplet amount';
	@override late final _TranslationsStandConstraintFormEn constraintForm = _TranslationsStandConstraintFormEn._(_root);
	@override String get active => TranslationOverrides.string(_root.$meta, 'stand.active', {}) ?? 'Active';
}

// Path: monitoring
class _TranslationsMonitoringEn implements _TranslationsMonitoringEs {
	_TranslationsMonitoringEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get dateForm => TranslationOverrides.string(_root.$meta, 'monitoring.dateForm', {}) ?? 'Date';
	@override String get dateToday => TranslationOverrides.string(_root.$meta, 'monitoring.dateToday', {}) ?? 'Today';
	@override String get dateYesterday => TranslationOverrides.string(_root.$meta, 'monitoring.dateYesterday', {}) ?? 'Yesterday';
	@override String get dateWeek => TranslationOverrides.string(_root.$meta, 'monitoring.dateWeek', {}) ?? 'Week';
	@override String get dateMonth => TranslationOverrides.string(_root.$meta, 'monitoring.dateMonth', {}) ?? 'Month';
	@override String get dateYear => TranslationOverrides.string(_root.$meta, 'monitoring.dateYear', {}) ?? 'Year';
	@override String get orderForm => TranslationOverrides.string(_root.$meta, 'monitoring.orderForm', {}) ?? 'Order';
	@override String get orderQuantity => TranslationOverrides.string(_root.$meta, 'monitoring.orderQuantity', {}) ?? 'Quantity';
	@override String get orderAmount => TranslationOverrides.string(_root.$meta, 'monitoring.orderAmount', {}) ?? 'Amount';
	@override String get quiniela => TranslationOverrides.string(_root.$meta, 'monitoring.quiniela', {}) ?? 'Quiniela';
	@override String get pale => TranslationOverrides.string(_root.$meta, 'monitoring.pale', {}) ?? 'Pale';
	@override String get tripleta => TranslationOverrides.string(_root.$meta, 'monitoring.tripleta', {}) ?? 'Triplet';
	@override String get playEmpty => TranslationOverrides.string(_root.$meta, 'monitoring.playEmpty', {}) ?? 'No plays available';
}

// Path: ticket
class _TranslationsTicketEn implements _TranslationsTicketEs {
	_TranslationsTicketEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get title => TranslationOverrides.string(_root.$meta, 'ticket.title', {}) ?? 'Tickets';
	@override String get detail => TranslationOverrides.string(_root.$meta, 'ticket.detail', {}) ?? 'Details';
	@override String get number => TranslationOverrides.string(_root.$meta, 'ticket.number', {}) ?? 'Number';
	@override String get group => TranslationOverrides.string(_root.$meta, 'ticket.group', {}) ?? 'Grupo';
	@override String get stand => TranslationOverrides.string(_root.$meta, 'ticket.stand', {}) ?? 'Stand';
	@override String get lottery => TranslationOverrides.string(_root.$meta, 'ticket.lottery', {}) ?? 'Lottery';
	@override String get play => TranslationOverrides.string(_root.$meta, 'ticket.play', {}) ?? 'Play';
	@override String get playAmount => TranslationOverrides.string(_root.$meta, 'ticket.playAmount', {}) ?? 'Amount';
	@override String get subtotalAmount => TranslationOverrides.string(_root.$meta, 'ticket.subtotalAmount', {}) ?? 'Subtotal';
	@override String get status => TranslationOverrides.string(_root.$meta, 'ticket.status', {}) ?? 'Status';
	@override String get cancelAction => TranslationOverrides.string(_root.$meta, 'ticket.cancelAction', {}) ?? 'Cancel';
	@override String get cancelActionTitle => TranslationOverrides.string(_root.$meta, 'ticket.cancelActionTitle', {}) ?? 'Confirm Ticket Cancellation';
	@override String get cancelActionContent => TranslationOverrides.string(_root.$meta, 'ticket.cancelActionContent', {}) ?? 'This action cannot be undone. Are you sure?';
	@override String get cancelSuccess => TranslationOverrides.string(_root.$meta, 'ticket.cancelSuccess', {}) ?? 'Ticket canceled';
	@override String get showDetails => TranslationOverrides.string(_root.$meta, 'ticket.showDetails', {}) ?? 'Show Details';
	@override String get selectATicket => TranslationOverrides.string(_root.$meta, 'ticket.selectATicket', {}) ?? 'No ticket selected';
	@override String get empty => TranslationOverrides.string(_root.$meta, 'ticket.empty', {}) ?? 'No tickets available';
	@override String get total => TranslationOverrides.string(_root.$meta, 'ticket.total', {}) ?? 'Total';
	@override String get date => TranslationOverrides.string(_root.$meta, 'ticket.date', {}) ?? 'Date';
	@override String get all => TranslationOverrides.string(_root.$meta, 'ticket.all', {}) ?? 'All';
	@override String get stands => TranslationOverrides.string(_root.$meta, 'ticket.stands', {}) ?? 'Lotttery Stands';
}

// Path: sales
class _TranslationsSalesEn implements _TranslationsSalesEs {
	_TranslationsSalesEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get title => TranslationOverrides.string(_root.$meta, 'sales.title', {}) ?? 'Sales';
	@override String get stand => TranslationOverrides.string(_root.$meta, 'sales.stand', {}) ?? 'Stands';
	@override String get options => TranslationOverrides.string(_root.$meta, 'sales.options', {}) ?? 'Options';
	@override String get all => TranslationOverrides.string(_root.$meta, 'sales.all', {}) ?? 'All';
	@override String get date => TranslationOverrides.string(_root.$meta, 'sales.date', {}) ?? 'Date';
	@override String get groups => TranslationOverrides.string(_root.$meta, 'sales.groups', {}) ?? 'Groups';
	@override String get lotteries => TranslationOverrides.string(_root.$meta, 'sales.lotteries', {}) ?? 'Lotteries';
	@override String get bank => TranslationOverrides.string(_root.$meta, 'sales.bank', {}) ?? 'Banks';
	@override String get sales => TranslationOverrides.string(_root.$meta, 'sales.sales', {}) ?? 'Profits';
	@override String get prizes => TranslationOverrides.string(_root.$meta, 'sales.prizes', {}) ?? 'Prizes';
	@override String get balance => TranslationOverrides.string(_root.$meta, 'sales.balance', {}) ?? 'Balance';
	@override String get total => TranslationOverrides.string(_root.$meta, 'sales.total', {}) ?? 'Total';
}

// Path: result
class _TranslationsResultEn implements _TranslationsResultEs {
	_TranslationsResultEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get add => TranslationOverrides.string(_root.$meta, 'result.add', {}) ?? 'Add';
	@override String get edit => TranslationOverrides.string(_root.$meta, 'result.edit', {}) ?? 'Edit';
	@override String get date => TranslationOverrides.string(_root.$meta, 'result.date', {}) ?? 'Date';
	@override String get lottery => TranslationOverrides.string(_root.$meta, 'result.lottery', {}) ?? 'Lottery';
	@override String get group => TranslationOverrides.string(_root.$meta, 'result.group', {}) ?? 'Group';
	@override String get stand => TranslationOverrides.string(_root.$meta, 'result.stand', {}) ?? 'Stand';
	@override String get firstPrize => TranslationOverrides.string(_root.$meta, 'result.firstPrize', {}) ?? 'First number';
	@override String get secondPrize => TranslationOverrides.string(_root.$meta, 'result.secondPrize', {}) ?? 'Second number';
	@override String get thirdPrize => TranslationOverrides.string(_root.$meta, 'result.thirdPrize', {}) ?? 'Third number';
	@override String get empty => TranslationOverrides.string(_root.$meta, 'result.empty', {}) ?? 'No results available';
	@override late final _TranslationsResultConfirmationEn confirmation = _TranslationsResultConfirmationEn._(_root);
}

// Path: settings
class _TranslationsSettingsEn implements _TranslationsSettingsEs {
	_TranslationsSettingsEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get title => TranslationOverrides.string(_root.$meta, 'settings.title', {}) ?? 'Settings';
	@override String get theme => TranslationOverrides.string(_root.$meta, 'settings.theme', {}) ?? 'Theme';
	@override String get dark => TranslationOverrides.string(_root.$meta, 'settings.dark', {}) ?? 'Dark';
	@override String get light => TranslationOverrides.string(_root.$meta, 'settings.light', {}) ?? 'Light';
	@override String get success => TranslationOverrides.string(_root.$meta, 'settings.success', {}) ?? 'Settings updated';
	@override late final _TranslationsSettingsOptionsEn options = _TranslationsSettingsOptionsEn._(_root);
}

// Path: group.constraintForm
class _TranslationsGroupConstraintFormEn implements _TranslationsGroupConstraintFormEs {
	_TranslationsGroupConstraintFormEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get title => TranslationOverrides.string(_root.$meta, 'group.constraintForm.title', {}) ?? 'Add Constraints';
	@override String get amount => TranslationOverrides.string(_root.$meta, 'group.constraintForm.amount', {}) ?? 'Amount';
	@override String get empty => TranslationOverrides.string(_root.$meta, 'group.constraintForm.empty', {}) ?? 'No constraints created';
	@override String get from => TranslationOverrides.string(_root.$meta, 'group.constraintForm.from', {}) ?? 'From';
	@override String get to => TranslationOverrides.string(_root.$meta, 'group.constraintForm.to', {}) ?? 'To (Optional)';
}

// Path: stand.constraintForm
class _TranslationsStandConstraintFormEn implements _TranslationsStandConstraintFormEs {
	_TranslationsStandConstraintFormEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get title => TranslationOverrides.string(_root.$meta, 'stand.constraintForm.title', {}) ?? 'Add Constraints';
	@override String get amount => TranslationOverrides.string(_root.$meta, 'stand.constraintForm.amount', {}) ?? 'Amount';
	@override String get empty => TranslationOverrides.string(_root.$meta, 'stand.constraintForm.empty', {}) ?? 'No constraints created';
	@override String get from => TranslationOverrides.string(_root.$meta, 'stand.constraintForm.from', {}) ?? 'From';
	@override String get to => TranslationOverrides.string(_root.$meta, 'stand.constraintForm.to', {}) ?? 'To (Optional)';
}

// Path: result.confirmation
class _TranslationsResultConfirmationEn implements _TranslationsResultConfirmationEs {
	_TranslationsResultConfirmationEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get title => TranslationOverrides.string(_root.$meta, 'result.confirmation.title', {}) ?? 'Are you sure you want to confirm the results?';
	@override String get yes => TranslationOverrides.string(_root.$meta, 'result.confirmation.yes', {}) ?? 'Yes';
	@override String get no => TranslationOverrides.string(_root.$meta, 'result.confirmation.no', {}) ?? 'No';
}

// Path: settings.options
class _TranslationsSettingsOptionsEn implements _TranslationsSettingsOptionsEs {
	_TranslationsSettingsOptionsEn._(this._root);

	@override final _TranslationsEn _root; // ignore: unused_field

	// Translations
	@override String get tickets => TranslationOverrides.string(_root.$meta, 'settings.options.tickets', {}) ?? 'Tickets';
	@override String get stand => TranslationOverrides.string(_root.$meta, 'settings.options.stand', {}) ?? 'Stands';
	@override String get lottery => TranslationOverrides.string(_root.$meta, 'settings.options.lottery', {}) ?? 'Lotteries';
	@override String get group => TranslationOverrides.string(_root.$meta, 'settings.options.group', {}) ?? 'Groups';
	@override String get consortium => TranslationOverrides.string(_root.$meta, 'settings.options.consortium', {}) ?? 'Consortium';
}

/// Flat map(s) containing all translations.
/// Only for edge cases! For simple maps, use the map function of this library.

extension on _TranslationsEs {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'common.back': return TranslationOverrides.string(_root.$meta, 'common.back', {}) ?? 'Atrás';
			case 'common.next': return TranslationOverrides.string(_root.$meta, 'common.next', {}) ?? 'Continuar';
			case 'common.done': return TranslationOverrides.string(_root.$meta, 'common.done', {}) ?? 'Completar';
			case 'common.save': return TranslationOverrides.string(_root.$meta, 'common.save', {}) ?? 'Aplicar';
			case 'common.remove': return TranslationOverrides.string(_root.$meta, 'common.remove', {}) ?? 'Eliminar';
			case 'common.signOut': return TranslationOverrides.string(_root.$meta, 'common.signOut', {}) ?? 'Cerrar sesión';
			case 'common.edit': return TranslationOverrides.string(_root.$meta, 'common.edit', {}) ?? 'Editar';
			case 'singIn.messageTitle': return TranslationOverrides.string(_root.$meta, 'singIn.messageTitle', {}) ?? 'Inicio de sesión';
			case 'singIn.messageContent': return TranslationOverrides.string(_root.$meta, 'singIn.messageContent', {}) ?? 'Si has olvidado tu contraseña o tienes dificultades para iniciar sesión, no dudes en ponerte en contacto con tu supervisor para recibir asistencia.';
			case 'singIn.signIn': return TranslationOverrides.string(_root.$meta, 'singIn.signIn', {}) ?? 'Iniciar sesión';
			case 'singIn.username': return TranslationOverrides.string(_root.$meta, 'singIn.username', {}) ?? 'Usuario';
			case 'singIn.password': return TranslationOverrides.string(_root.$meta, 'singIn.password', {}) ?? 'Contraseña';
			case 'splash.notConsortiumErrorMessage': return TranslationOverrides.string(_root.$meta, 'splash.notConsortiumErrorMessage', {}) ?? 'Este usuario actualmente no está asociado a ningún consorcio.';
			case 'consortium.name': return TranslationOverrides.string(_root.$meta, 'consortium.name', {}) ?? 'Nombre del consorcio';
			case 'consortium.maximumSaleAmount': return TranslationOverrides.string(_root.$meta, 'consortium.maximumSaleAmount', {}) ?? 'Monto máximo de venta';
			case 'consortium.quinielaMaxAmount': return TranslationOverrides.string(_root.$meta, 'consortium.quinielaMaxAmount', {}) ?? 'Monto máximo de quiniela';
			case 'consortium.paleMaxAmount': return TranslationOverrides.string(_root.$meta, 'consortium.paleMaxAmount', {}) ?? 'Monto máximo de pale';
			case 'consortium.tripletaMaxAmount': return TranslationOverrides.string(_root.$meta, 'consortium.tripletaMaxAmount', {}) ?? 'Monto máximo de tripleta';
			case 'consortium.success': return TranslationOverrides.string(_root.$meta, 'consortium.success', {}) ?? 'Consorcio actualizado';
			case 'consortium.empty': return TranslationOverrides.string(_root.$meta, 'consortium.empty', {}) ?? 'No se encuentra el consorcio asociado';
			case 'group.title': return TranslationOverrides.string(_root.$meta, 'group.title', {}) ?? 'Grupos';
			case 'group.detail': return TranslationOverrides.string(_root.$meta, 'group.detail', {}) ?? 'Detalles';
			case 'group.prizes': return TranslationOverrides.string(_root.$meta, 'group.prizes', {}) ?? 'Premios';
			case 'group.constraints': return TranslationOverrides.string(_root.$meta, 'group.constraints', {}) ?? 'Restricciones';
			case 'group.name': return TranslationOverrides.string(_root.$meta, 'group.name', {}) ?? 'Nombre';
			case 'group.selectAGroup': return TranslationOverrides.string(_root.$meta, 'group.selectAGroup', {}) ?? 'No hay grupo seleccionado';
			case 'group.maximumSaleAmount': return TranslationOverrides.string(_root.$meta, 'group.maximumSaleAmount', {}) ?? 'Monto máximo de venta';
			case 'group.quinielaMaxAmount': return TranslationOverrides.string(_root.$meta, 'group.quinielaMaxAmount', {}) ?? 'Monto máximo de quiniela';
			case 'group.paleMaxAmount': return TranslationOverrides.string(_root.$meta, 'group.paleMaxAmount', {}) ?? 'Monto máximo de pale';
			case 'group.tripletaMaxAmount': return TranslationOverrides.string(_root.$meta, 'group.tripletaMaxAmount', {}) ?? 'Monto máximo de tripleta';
			case 'group.empty': return TranslationOverrides.string(_root.$meta, 'group.empty', {}) ?? 'No hay grupos creados';
			case 'group.add': return TranslationOverrides.string(_root.$meta, 'group.add', {}) ?? 'Añadir';
			case 'group.edit': return TranslationOverrides.string(_root.$meta, 'group.edit', {}) ?? 'Editar';
			case 'group.delete': return TranslationOverrides.string(_root.$meta, 'group.delete', {}) ?? 'Borrar';
			case 'group.createdSuccess': return TranslationOverrides.string(_root.$meta, 'group.createdSuccess', {}) ?? 'Grupo creado';
			case 'group.updateSuccess': return TranslationOverrides.string(_root.$meta, 'group.updateSuccess', {}) ?? 'Grupo actualizado';
			case 'group.deleteSuccess': return TranslationOverrides.string(_root.$meta, 'group.deleteSuccess', {}) ?? 'Grupo borrado';
			case 'group.active': return TranslationOverrides.string(_root.$meta, 'group.active', {}) ?? 'Activo';
			case 'group.deleteTitle': return TranslationOverrides.string(_root.$meta, 'group.deleteTitle', {}) ?? 'Estas seguro de borrar este grupo';
			case 'group.deleteContent': return TranslationOverrides.string(_root.$meta, 'group.deleteContent', {}) ?? 'Solo se pueden borrar grupos que no tengan una banca relacionadas';
			case 'group.constraintForm.title': return TranslationOverrides.string(_root.$meta, 'group.constraintForm.title', {}) ?? 'Añadir Restricciones';
			case 'group.constraintForm.amount': return TranslationOverrides.string(_root.$meta, 'group.constraintForm.amount', {}) ?? 'Monto';
			case 'group.constraintForm.empty': return TranslationOverrides.string(_root.$meta, 'group.constraintForm.empty', {}) ?? 'No hay restricciones creadas';
			case 'group.constraintForm.from': return TranslationOverrides.string(_root.$meta, 'group.constraintForm.from', {}) ?? 'Desde';
			case 'group.constraintForm.to': return TranslationOverrides.string(_root.$meta, 'group.constraintForm.to', {}) ?? 'Hasta (Opcional)';
			case 'lottery.title': return TranslationOverrides.string(_root.$meta, 'lottery.title', {}) ?? 'Loterías';
			case 'lottery.detail': return TranslationOverrides.string(_root.$meta, 'lottery.detail', {}) ?? 'Detalles';
			case 'lottery.schedules': return TranslationOverrides.string(_root.$meta, 'lottery.schedules', {}) ?? 'Horarios';
			case 'lottery.isClosed': return TranslationOverrides.string(_root.$meta, 'lottery.isClosed', {}) ?? 'Cerrada';
			case 'lottery.name': return TranslationOverrides.string(_root.$meta, 'lottery.name', {}) ?? 'Nombre';
			case 'lottery.success': return TranslationOverrides.string(_root.$meta, 'lottery.success', {}) ?? 'Lotería actualizada';
			case 'lottery.active': return TranslationOverrides.string(_root.$meta, 'lottery.active', {}) ?? 'Activo';
			case 'lottery.edit': return TranslationOverrides.string(_root.$meta, 'lottery.edit', {}) ?? 'Editar';
			case 'lottery.add': return TranslationOverrides.string(_root.$meta, 'lottery.add', {}) ?? 'Añadir';
			case 'lottery.scheduleEmpty': return TranslationOverrides.string(_root.$meta, 'lottery.scheduleEmpty', {}) ?? 'No hay horarios creados';
			case 'lottery.effectiveDate': return TranslationOverrides.string(_root.$meta, 'lottery.effectiveDate', {}) ?? 'Fecha de vigencia';
			case 'lottery.removeScheduleTitle': return TranslationOverrides.string(_root.$meta, 'lottery.removeScheduleTitle', {}) ?? '¿Estas seguro de borrar este horario?';
			case 'lottery.removeScheduleContent': return TranslationOverrides.string(_root.$meta, 'lottery.removeScheduleContent', {}) ?? 'No podras recuperar este horario';
			case 'lottery.selectALottery': return TranslationOverrides.string(_root.$meta, 'lottery.selectALottery', {}) ?? 'No hay lotería seleccionada';
			case 'lottery.quinielaFirstPrize': return TranslationOverrides.string(_root.$meta, 'lottery.quinielaFirstPrize', {}) ?? 'Quiniela 1er premio';
			case 'lottery.quinielaSecondPrize': return TranslationOverrides.string(_root.$meta, 'lottery.quinielaSecondPrize', {}) ?? 'Quiniela 2da premio';
			case 'lottery.quinielaThirdPrize': return TranslationOverrides.string(_root.$meta, 'lottery.quinielaThirdPrize', {}) ?? 'Quiniela 3ra premio';
			case 'lottery.paleFirstSecondPrize': return TranslationOverrides.string(_root.$meta, 'lottery.paleFirstSecondPrize', {}) ?? 'Pale 1er & 2da premio';
			case 'lottery.paleFirstThirdPrize': return TranslationOverrides.string(_root.$meta, 'lottery.paleFirstThirdPrize', {}) ?? 'Pale 1er & 3da premio';
			case 'lottery.paleSecondThirdPrize': return TranslationOverrides.string(_root.$meta, 'lottery.paleSecondThirdPrize', {}) ?? 'Pale 2da & 3ra premio';
			case 'lottery.tripletaPrice': return TranslationOverrides.string(_root.$meta, 'lottery.tripletaPrice', {}) ?? 'Tripleta premio';
			case 'lottery.timeOpen': return TranslationOverrides.string(_root.$meta, 'lottery.timeOpen', {}) ?? 'Hora de apertura';
			case 'lottery.timeClose': return TranslationOverrides.string(_root.$meta, 'lottery.timeClose', {}) ?? 'Hora de cierre';
			case 'stand.title': return TranslationOverrides.string(_root.$meta, 'stand.title', {}) ?? 'Bancas';
			case 'stand.detail': return TranslationOverrides.string(_root.$meta, 'stand.detail', {}) ?? 'Detalles';
			case 'stand.prizes': return TranslationOverrides.string(_root.$meta, 'stand.prizes', {}) ?? 'Premios';
			case 'stand.constraints': return TranslationOverrides.string(_root.$meta, 'stand.constraints', {}) ?? 'Restricciones';
			case 'stand.name': return TranslationOverrides.string(_root.$meta, 'stand.name', {}) ?? 'Nombre';
			case 'stand.group': return TranslationOverrides.string(_root.$meta, 'stand.group', {}) ?? 'Grupo';
			case 'stand.selectAStand': return TranslationOverrides.string(_root.$meta, 'stand.selectAStand', {}) ?? 'No hay banca seleccionada';
			case 'stand.contraint': return TranslationOverrides.string(_root.$meta, 'stand.contraint', {}) ?? 'Restrinción';
			case 'stand.username': return TranslationOverrides.string(_root.$meta, 'stand.username', {}) ?? 'Usuario';
			case 'stand.maximumSaleAmount': return TranslationOverrides.string(_root.$meta, 'stand.maximumSaleAmount', {}) ?? 'Monto máximo de venta';
			case 'stand.maximumCancellationAmount': return TranslationOverrides.string(_root.$meta, 'stand.maximumCancellationAmount', {}) ?? 'Monto máximo de cancelación';
			case 'stand.quinielaMaxAmount': return TranslationOverrides.string(_root.$meta, 'stand.quinielaMaxAmount', {}) ?? 'Monto máximo de quiniela';
			case 'stand.paleMaxAmount': return TranslationOverrides.string(_root.$meta, 'stand.paleMaxAmount', {}) ?? 'Monto máximo de pale';
			case 'stand.tripletaMaxAmount': return TranslationOverrides.string(_root.$meta, 'stand.tripletaMaxAmount', {}) ?? 'Monto máximo de tripleta';
			case 'stand.constraintForm.title': return TranslationOverrides.string(_root.$meta, 'stand.constraintForm.title', {}) ?? 'Añadir Restricciones';
			case 'stand.constraintForm.amount': return TranslationOverrides.string(_root.$meta, 'stand.constraintForm.amount', {}) ?? 'Monto';
			case 'stand.constraintForm.empty': return TranslationOverrides.string(_root.$meta, 'stand.constraintForm.empty', {}) ?? 'No hay restricciones creadas';
			case 'stand.constraintForm.from': return TranslationOverrides.string(_root.$meta, 'stand.constraintForm.from', {}) ?? 'Desde';
			case 'stand.constraintForm.to': return TranslationOverrides.string(_root.$meta, 'stand.constraintForm.to', {}) ?? 'Hasta (Opcional)';
			case 'stand.active': return TranslationOverrides.string(_root.$meta, 'stand.active', {}) ?? 'Activo';
			case 'monitoring.dateForm': return TranslationOverrides.string(_root.$meta, 'monitoring.dateForm', {}) ?? 'Fecha';
			case 'monitoring.dateToday': return TranslationOverrides.string(_root.$meta, 'monitoring.dateToday', {}) ?? 'Hoy';
			case 'monitoring.dateYesterday': return TranslationOverrides.string(_root.$meta, 'monitoring.dateYesterday', {}) ?? 'Ayer';
			case 'monitoring.dateWeek': return TranslationOverrides.string(_root.$meta, 'monitoring.dateWeek', {}) ?? 'Semana';
			case 'monitoring.dateMonth': return TranslationOverrides.string(_root.$meta, 'monitoring.dateMonth', {}) ?? 'Mes';
			case 'monitoring.dateYear': return TranslationOverrides.string(_root.$meta, 'monitoring.dateYear', {}) ?? 'Año';
			case 'monitoring.orderForm': return TranslationOverrides.string(_root.$meta, 'monitoring.orderForm', {}) ?? 'Orden';
			case 'monitoring.orderQuantity': return TranslationOverrides.string(_root.$meta, 'monitoring.orderQuantity', {}) ?? 'Cantidad';
			case 'monitoring.orderAmount': return TranslationOverrides.string(_root.$meta, 'monitoring.orderAmount', {}) ?? 'Monto';
			case 'monitoring.quiniela': return TranslationOverrides.string(_root.$meta, 'monitoring.quiniela', {}) ?? 'Quiniela';
			case 'monitoring.pale': return TranslationOverrides.string(_root.$meta, 'monitoring.pale', {}) ?? 'Pale';
			case 'monitoring.tripleta': return TranslationOverrides.string(_root.$meta, 'monitoring.tripleta', {}) ?? 'Tripleta';
			case 'monitoring.playEmpty': return TranslationOverrides.string(_root.$meta, 'monitoring.playEmpty', {}) ?? 'No hay jugadas';
			case 'ticket.title': return TranslationOverrides.string(_root.$meta, 'ticket.title', {}) ?? 'Tickets';
			case 'ticket.detail': return TranslationOverrides.string(_root.$meta, 'ticket.detail', {}) ?? 'Detalles';
			case 'ticket.number': return TranslationOverrides.string(_root.$meta, 'ticket.number', {}) ?? 'Número';
			case 'ticket.group': return TranslationOverrides.string(_root.$meta, 'ticket.group', {}) ?? 'Grupo';
			case 'ticket.stand': return TranslationOverrides.string(_root.$meta, 'ticket.stand', {}) ?? 'Banco';
			case 'ticket.lottery': return TranslationOverrides.string(_root.$meta, 'ticket.lottery', {}) ?? 'Lotería';
			case 'ticket.play': return TranslationOverrides.string(_root.$meta, 'ticket.play', {}) ?? 'Jugada';
			case 'ticket.playAmount': return TranslationOverrides.string(_root.$meta, 'ticket.playAmount', {}) ?? 'Monto';
			case 'ticket.subtotalAmount': return TranslationOverrides.string(_root.$meta, 'ticket.subtotalAmount', {}) ?? 'Subtotal';
			case 'ticket.status': return TranslationOverrides.string(_root.$meta, 'ticket.status', {}) ?? 'Estado';
			case 'ticket.cancelAction': return TranslationOverrides.string(_root.$meta, 'ticket.cancelAction', {}) ?? 'Anular';
			case 'ticket.cancelActionTitle': return TranslationOverrides.string(_root.$meta, 'ticket.cancelActionTitle', {}) ?? 'Confirmar Anulación del Ticket';
			case 'ticket.cancelActionContent': return TranslationOverrides.string(_root.$meta, 'ticket.cancelActionContent', {}) ?? 'Esta acción no se puede deshacer. ¿Estás seguro?';
			case 'ticket.cancelSuccess': return TranslationOverrides.string(_root.$meta, 'ticket.cancelSuccess', {}) ?? 'Ticket anulado';
			case 'ticket.showDetails': return TranslationOverrides.string(_root.$meta, 'ticket.showDetails', {}) ?? 'Ver detalles';
			case 'ticket.empty': return TranslationOverrides.string(_root.$meta, 'ticket.empty', {}) ?? 'No hay tickets disponibles';
			case 'ticket.selectATicket': return TranslationOverrides.string(_root.$meta, 'ticket.selectATicket', {}) ?? 'No hay ticket seleccionado';
			case 'ticket.total': return TranslationOverrides.string(_root.$meta, 'ticket.total', {}) ?? 'Total';
			case 'ticket.date': return TranslationOverrides.string(_root.$meta, 'ticket.date', {}) ?? 'Fecha';
			case 'ticket.all': return TranslationOverrides.string(_root.$meta, 'ticket.all', {}) ?? 'Todos';
			case 'ticket.stands': return TranslationOverrides.string(_root.$meta, 'ticket.stands', {}) ?? 'Bancas';
			case 'sales.title': return TranslationOverrides.string(_root.$meta, 'sales.title', {}) ?? 'Ventas';
			case 'sales.stand': return TranslationOverrides.string(_root.$meta, 'sales.stand', {}) ?? 'Bancas';
			case 'sales.options': return TranslationOverrides.string(_root.$meta, 'sales.options', {}) ?? 'Opciones';
			case 'sales.all': return TranslationOverrides.string(_root.$meta, 'sales.all', {}) ?? 'Todas';
			case 'sales.date': return TranslationOverrides.string(_root.$meta, 'sales.date', {}) ?? 'Fecha';
			case 'sales.groups': return TranslationOverrides.string(_root.$meta, 'sales.groups', {}) ?? 'Grupos';
			case 'sales.lotteries': return TranslationOverrides.string(_root.$meta, 'sales.lotteries', {}) ?? 'Loterías';
			case 'sales.bank': return TranslationOverrides.string(_root.$meta, 'sales.bank', {}) ?? 'Bancas';
			case 'sales.sales': return TranslationOverrides.string(_root.$meta, 'sales.sales', {}) ?? 'Ganancias';
			case 'sales.prizes': return TranslationOverrides.string(_root.$meta, 'sales.prizes', {}) ?? 'Premios';
			case 'sales.balance': return TranslationOverrides.string(_root.$meta, 'sales.balance', {}) ?? 'Balance';
			case 'sales.total': return TranslationOverrides.string(_root.$meta, 'sales.total', {}) ?? 'Total';
			case 'result.add': return TranslationOverrides.string(_root.$meta, 'result.add', {}) ?? 'Añadir';
			case 'result.edit': return TranslationOverrides.string(_root.$meta, 'result.edit', {}) ?? 'Editar';
			case 'result.date': return TranslationOverrides.string(_root.$meta, 'result.date', {}) ?? 'Fecha';
			case 'result.lottery': return TranslationOverrides.string(_root.$meta, 'result.lottery', {}) ?? 'Lotería';
			case 'result.group': return TranslationOverrides.string(_root.$meta, 'result.group', {}) ?? 'Grupo';
			case 'result.stand': return TranslationOverrides.string(_root.$meta, 'result.stand', {}) ?? 'Banco';
			case 'result.firstPrize': return TranslationOverrides.string(_root.$meta, 'result.firstPrize', {}) ?? 'Primer número';
			case 'result.secondPrize': return TranslationOverrides.string(_root.$meta, 'result.secondPrize', {}) ?? 'Segundo número';
			case 'result.thirdPrize': return TranslationOverrides.string(_root.$meta, 'result.thirdPrize', {}) ?? 'Tercer número';
			case 'result.empty': return TranslationOverrides.string(_root.$meta, 'result.empty', {}) ?? 'No hay resultados disponibles';
			case 'result.confirmation.title': return TranslationOverrides.string(_root.$meta, 'result.confirmation.title', {}) ?? '¿Estás seguro de que deseas confirmar los resultados?';
			case 'result.confirmation.yes': return TranslationOverrides.string(_root.$meta, 'result.confirmation.yes', {}) ?? 'Si';
			case 'result.confirmation.no': return TranslationOverrides.string(_root.$meta, 'result.confirmation.no', {}) ?? 'No';
			case 'settings.title': return TranslationOverrides.string(_root.$meta, 'settings.title', {}) ?? 'Configuración';
			case 'settings.theme': return TranslationOverrides.string(_root.$meta, 'settings.theme', {}) ?? 'Tema';
			case 'settings.dark': return TranslationOverrides.string(_root.$meta, 'settings.dark', {}) ?? 'Oscuro';
			case 'settings.light': return TranslationOverrides.string(_root.$meta, 'settings.light', {}) ?? 'Claro';
			case 'settings.success': return TranslationOverrides.string(_root.$meta, 'settings.success', {}) ?? 'Configuración actualizada';
			case 'settings.options.tickets': return TranslationOverrides.string(_root.$meta, 'settings.options.tickets', {}) ?? 'Tickets';
			case 'settings.options.stand': return TranslationOverrides.string(_root.$meta, 'settings.options.stand', {}) ?? 'Bancas';
			case 'settings.options.lottery': return TranslationOverrides.string(_root.$meta, 'settings.options.lottery', {}) ?? 'Loterías';
			case 'settings.options.group': return TranslationOverrides.string(_root.$meta, 'settings.options.group', {}) ?? 'Grupos';
			case 'settings.options.consortium': return TranslationOverrides.string(_root.$meta, 'settings.options.consortium', {}) ?? 'Consorcio';
			default: return null;
		}
	}
}

extension on _TranslationsEn {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'common.back': return TranslationOverrides.string(_root.$meta, 'common.back', {}) ?? 'Back';
			case 'common.next': return TranslationOverrides.string(_root.$meta, 'common.next', {}) ?? 'Next';
			case 'common.done': return TranslationOverrides.string(_root.$meta, 'common.done', {}) ?? 'Done';
			case 'common.save': return TranslationOverrides.string(_root.$meta, 'common.save', {}) ?? 'Apply';
			case 'common.remove': return TranslationOverrides.string(_root.$meta, 'common.remove', {}) ?? 'Delete';
			case 'common.signOut': return TranslationOverrides.string(_root.$meta, 'common.signOut', {}) ?? 'Sign out';
			case 'common.edit': return TranslationOverrides.string(_root.$meta, 'common.edit', {}) ?? 'Edit';
			case 'signIn.messageTitle': return TranslationOverrides.string(_root.$meta, 'signIn.messageTitle', {}) ?? 'Sign-In';
			case 'signIn.messageContent': return TranslationOverrides.string(_root.$meta, 'signIn.messageContent', {}) ?? 'If you have forgotten your password or are experiencing difficulties in signing in, feel free to get in touch with your supervisor for assistance.';
			case 'signIn.signIn': return TranslationOverrides.string(_root.$meta, 'signIn.signIn', {}) ?? 'Sign In';
			case 'signIn.username': return TranslationOverrides.string(_root.$meta, 'signIn.username', {}) ?? 'Username';
			case 'signIn.password': return TranslationOverrides.string(_root.$meta, 'signIn.password', {}) ?? 'Password';
			case 'splash.notConsortiumErrorMessage': return TranslationOverrides.string(_root.$meta, 'splash.notConsortiumErrorMessage', {}) ?? 'This user is currently not assigned to any consortium.';
			case 'consortium.name': return TranslationOverrides.string(_root.$meta, 'consortium.name', {}) ?? 'Consortium Name';
			case 'consortium.maximumSaleAmount': return TranslationOverrides.string(_root.$meta, 'consortium.maximumSaleAmount', {}) ?? 'Maximum Sale Amount';
			case 'consortium.quinielaMaxAmount': return TranslationOverrides.string(_root.$meta, 'consortium.quinielaMaxAmount', {}) ?? 'Maximum Quiniela Amount';
			case 'consortium.paleMaxAmount': return TranslationOverrides.string(_root.$meta, 'consortium.paleMaxAmount', {}) ?? 'Maximum Pale Amount';
			case 'consortium.tripletaMaxAmount': return TranslationOverrides.string(_root.$meta, 'consortium.tripletaMaxAmount', {}) ?? 'Maximum Triplet Amount';
			case 'consortium.success': return TranslationOverrides.string(_root.$meta, 'consortium.success', {}) ?? 'Consortium updated';
			case 'consortium.empty': return TranslationOverrides.string(_root.$meta, 'consortium.empty', {}) ?? 'No associated consortium found';
			case 'group.title': return TranslationOverrides.string(_root.$meta, 'group.title', {}) ?? 'Groups';
			case 'group.detail': return TranslationOverrides.string(_root.$meta, 'group.detail', {}) ?? 'Details';
			case 'group.prizes': return TranslationOverrides.string(_root.$meta, 'group.prizes', {}) ?? 'Prizes';
			case 'group.constraints': return TranslationOverrides.string(_root.$meta, 'group.constraints', {}) ?? 'Constraints';
			case 'group.name': return TranslationOverrides.string(_root.$meta, 'group.name', {}) ?? 'Name';
			case 'group.selectAGroup': return TranslationOverrides.string(_root.$meta, 'group.selectAGroup', {}) ?? 'No group selected';
			case 'group.add': return TranslationOverrides.string(_root.$meta, 'group.add', {}) ?? 'Add';
			case 'group.edit': return TranslationOverrides.string(_root.$meta, 'group.edit', {}) ?? 'Edit';
			case 'group.delete': return TranslationOverrides.string(_root.$meta, 'group.delete', {}) ?? 'Delete';
			case 'group.maximumSaleAmount': return TranslationOverrides.string(_root.$meta, 'group.maximumSaleAmount', {}) ?? 'Maximum sale amount';
			case 'group.quinielaMaxAmount': return TranslationOverrides.string(_root.$meta, 'group.quinielaMaxAmount', {}) ?? 'Maximum quiniela amount';
			case 'group.paleMaxAmount': return TranslationOverrides.string(_root.$meta, 'group.paleMaxAmount', {}) ?? 'Maximum pale amount';
			case 'group.tripletaMaxAmount': return TranslationOverrides.string(_root.$meta, 'group.tripletaMaxAmount', {}) ?? 'Maximum triplet amount';
			case 'group.empty': return TranslationOverrides.string(_root.$meta, 'group.empty', {}) ?? 'No groups created';
			case 'group.createdSuccess': return TranslationOverrides.string(_root.$meta, 'group.createdSuccess', {}) ?? 'Group created';
			case 'group.updateSuccess': return TranslationOverrides.string(_root.$meta, 'group.updateSuccess', {}) ?? 'Group updated';
			case 'group.deleteSuccess': return TranslationOverrides.string(_root.$meta, 'group.deleteSuccess', {}) ?? 'Group deleted';
			case 'group.active': return TranslationOverrides.string(_root.$meta, 'group.active', {}) ?? 'Active';
			case 'group.deleteTitle': return TranslationOverrides.string(_root.$meta, 'group.deleteTitle', {}) ?? 'Are you sure you want to delete this group';
			case 'group.deleteContent': return TranslationOverrides.string(_root.$meta, 'group.deleteContent', {}) ?? 'Only groups without associated benches can be deleted';
			case 'group.constraintForm.title': return TranslationOverrides.string(_root.$meta, 'group.constraintForm.title', {}) ?? 'Add Constraints';
			case 'group.constraintForm.amount': return TranslationOverrides.string(_root.$meta, 'group.constraintForm.amount', {}) ?? 'Amount';
			case 'group.constraintForm.empty': return TranslationOverrides.string(_root.$meta, 'group.constraintForm.empty', {}) ?? 'No constraints created';
			case 'group.constraintForm.from': return TranslationOverrides.string(_root.$meta, 'group.constraintForm.from', {}) ?? 'From';
			case 'group.constraintForm.to': return TranslationOverrides.string(_root.$meta, 'group.constraintForm.to', {}) ?? 'To (Optional)';
			case 'lottery.title': return TranslationOverrides.string(_root.$meta, 'lottery.title', {}) ?? 'Lotteries';
			case 'lottery.details': return TranslationOverrides.string(_root.$meta, 'lottery.details', {}) ?? 'Details';
			case 'lottery.schedules': return TranslationOverrides.string(_root.$meta, 'lottery.schedules', {}) ?? 'Schedules';
			case 'lottery.isClosed': return TranslationOverrides.string(_root.$meta, 'lottery.isClosed', {}) ?? 'Closed';
			case 'lottery.name': return TranslationOverrides.string(_root.$meta, 'lottery.name', {}) ?? 'Name';
			case 'lottery.success': return TranslationOverrides.string(_root.$meta, 'lottery.success', {}) ?? 'Lottery updated';
			case 'lottery.active': return TranslationOverrides.string(_root.$meta, 'lottery.active', {}) ?? 'Active';
			case 'lottery.add': return TranslationOverrides.string(_root.$meta, 'lottery.add', {}) ?? 'Add';
			case 'lottery.scheduleEmpty': return TranslationOverrides.string(_root.$meta, 'lottery.scheduleEmpty', {}) ?? 'No schedules created';
			case 'lottery.effectiveDate': return TranslationOverrides.string(_root.$meta, 'lottery.effectiveDate', {}) ?? 'Effective Date';
			case 'lottery.removeScheduleTitle': return TranslationOverrides.string(_root.$meta, 'lottery.removeScheduleTitle', {}) ?? 'Are you sure you want to delete this schedule?';
			case 'lottery.removeScheduleContent': return TranslationOverrides.string(_root.$meta, 'lottery.removeScheduleContent', {}) ?? 'No schedule can be restored';
			case 'lottery.selectALottery': return TranslationOverrides.string(_root.$meta, 'lottery.selectALottery', {}) ?? 'No lottery selected';
			case 'lottery.quinielaFirstPrize': return TranslationOverrides.string(_root.$meta, 'lottery.quinielaFirstPrize', {}) ?? 'Quiniela 1st prize';
			case 'lottery.quinielaSecondPrize': return TranslationOverrides.string(_root.$meta, 'lottery.quinielaSecondPrize', {}) ?? 'Quiniela 2nd prize';
			case 'lottery.quinielaThirdPrize': return TranslationOverrides.string(_root.$meta, 'lottery.quinielaThirdPrize', {}) ?? 'Quiniela 3rd prize';
			case 'lottery.paleFirstSecondPrize': return TranslationOverrides.string(_root.$meta, 'lottery.paleFirstSecondPrize', {}) ?? 'Pale 1st & 2nd prize';
			case 'lottery.paleFirstThirdPrize': return TranslationOverrides.string(_root.$meta, 'lottery.paleFirstThirdPrize', {}) ?? 'Pale 1st & 3rd prize';
			case 'lottery.paleSecondThirdPrize': return TranslationOverrides.string(_root.$meta, 'lottery.paleSecondThirdPrize', {}) ?? 'Pale 2nd & 3rd prize';
			case 'lottery.tripletaPrice': return TranslationOverrides.string(_root.$meta, 'lottery.tripletaPrice', {}) ?? 'Tripleta prize';
			case 'lottery.timeOpen': return TranslationOverrides.string(_root.$meta, 'lottery.timeOpen', {}) ?? 'Opening time';
			case 'lottery.timeClose': return TranslationOverrides.string(_root.$meta, 'lottery.timeClose', {}) ?? 'Closing time';
			case 'stand.title': return TranslationOverrides.string(_root.$meta, 'stand.title', {}) ?? 'Stands';
			case 'stand.detail': return TranslationOverrides.string(_root.$meta, 'stand.detail', {}) ?? 'Details';
			case 'stand.prizes': return TranslationOverrides.string(_root.$meta, 'stand.prizes', {}) ?? 'Prizes';
			case 'stand.constraints': return TranslationOverrides.string(_root.$meta, 'stand.constraints', {}) ?? 'Constraints';
			case 'stand.name': return TranslationOverrides.string(_root.$meta, 'stand.name', {}) ?? 'Name';
			case 'stand.group': return TranslationOverrides.string(_root.$meta, 'stand.group', {}) ?? 'Group';
			case 'stand.selectAStand': return TranslationOverrides.string(_root.$meta, 'stand.selectAStand', {}) ?? 'No stand selected';
			case 'stand.contraint': return TranslationOverrides.string(_root.$meta, 'stand.contraint', {}) ?? 'Constraint';
			case 'stand.username': return TranslationOverrides.string(_root.$meta, 'stand.username', {}) ?? 'Username';
			case 'stand.maximumSaleAmount': return TranslationOverrides.string(_root.$meta, 'stand.maximumSaleAmount', {}) ?? 'Maximum sale amount';
			case 'stand.maximumCancellationAmount': return TranslationOverrides.string(_root.$meta, 'stand.maximumCancellationAmount', {}) ?? 'Maximum cancellation amount';
			case 'stand.quinielaMaxAmount': return TranslationOverrides.string(_root.$meta, 'stand.quinielaMaxAmount', {}) ?? 'Maximum quiniela amount';
			case 'stand.paleMaxAmount': return TranslationOverrides.string(_root.$meta, 'stand.paleMaxAmount', {}) ?? 'Maximum pale amount';
			case 'stand.tripletaMaxAmount': return TranslationOverrides.string(_root.$meta, 'stand.tripletaMaxAmount', {}) ?? 'Maximum triplet amount';
			case 'stand.constraintForm.title': return TranslationOverrides.string(_root.$meta, 'stand.constraintForm.title', {}) ?? 'Add Constraints';
			case 'stand.constraintForm.amount': return TranslationOverrides.string(_root.$meta, 'stand.constraintForm.amount', {}) ?? 'Amount';
			case 'stand.constraintForm.empty': return TranslationOverrides.string(_root.$meta, 'stand.constraintForm.empty', {}) ?? 'No constraints created';
			case 'stand.constraintForm.from': return TranslationOverrides.string(_root.$meta, 'stand.constraintForm.from', {}) ?? 'From';
			case 'stand.constraintForm.to': return TranslationOverrides.string(_root.$meta, 'stand.constraintForm.to', {}) ?? 'To (Optional)';
			case 'stand.active': return TranslationOverrides.string(_root.$meta, 'stand.active', {}) ?? 'Active';
			case 'monitoring.dateForm': return TranslationOverrides.string(_root.$meta, 'monitoring.dateForm', {}) ?? 'Date';
			case 'monitoring.dateToday': return TranslationOverrides.string(_root.$meta, 'monitoring.dateToday', {}) ?? 'Today';
			case 'monitoring.dateYesterday': return TranslationOverrides.string(_root.$meta, 'monitoring.dateYesterday', {}) ?? 'Yesterday';
			case 'monitoring.dateWeek': return TranslationOverrides.string(_root.$meta, 'monitoring.dateWeek', {}) ?? 'Week';
			case 'monitoring.dateMonth': return TranslationOverrides.string(_root.$meta, 'monitoring.dateMonth', {}) ?? 'Month';
			case 'monitoring.dateYear': return TranslationOverrides.string(_root.$meta, 'monitoring.dateYear', {}) ?? 'Year';
			case 'monitoring.orderForm': return TranslationOverrides.string(_root.$meta, 'monitoring.orderForm', {}) ?? 'Order';
			case 'monitoring.orderQuantity': return TranslationOverrides.string(_root.$meta, 'monitoring.orderQuantity', {}) ?? 'Quantity';
			case 'monitoring.orderAmount': return TranslationOverrides.string(_root.$meta, 'monitoring.orderAmount', {}) ?? 'Amount';
			case 'monitoring.quiniela': return TranslationOverrides.string(_root.$meta, 'monitoring.quiniela', {}) ?? 'Quiniela';
			case 'monitoring.pale': return TranslationOverrides.string(_root.$meta, 'monitoring.pale', {}) ?? 'Pale';
			case 'monitoring.tripleta': return TranslationOverrides.string(_root.$meta, 'monitoring.tripleta', {}) ?? 'Triplet';
			case 'monitoring.playEmpty': return TranslationOverrides.string(_root.$meta, 'monitoring.playEmpty', {}) ?? 'No plays available';
			case 'ticket.title': return TranslationOverrides.string(_root.$meta, 'ticket.title', {}) ?? 'Tickets';
			case 'ticket.detail': return TranslationOverrides.string(_root.$meta, 'ticket.detail', {}) ?? 'Details';
			case 'ticket.number': return TranslationOverrides.string(_root.$meta, 'ticket.number', {}) ?? 'Number';
			case 'ticket.group': return TranslationOverrides.string(_root.$meta, 'ticket.group', {}) ?? 'Grupo';
			case 'ticket.stand': return TranslationOverrides.string(_root.$meta, 'ticket.stand', {}) ?? 'Stand';
			case 'ticket.lottery': return TranslationOverrides.string(_root.$meta, 'ticket.lottery', {}) ?? 'Lottery';
			case 'ticket.play': return TranslationOverrides.string(_root.$meta, 'ticket.play', {}) ?? 'Play';
			case 'ticket.playAmount': return TranslationOverrides.string(_root.$meta, 'ticket.playAmount', {}) ?? 'Amount';
			case 'ticket.subtotalAmount': return TranslationOverrides.string(_root.$meta, 'ticket.subtotalAmount', {}) ?? 'Subtotal';
			case 'ticket.status': return TranslationOverrides.string(_root.$meta, 'ticket.status', {}) ?? 'Status';
			case 'ticket.cancelAction': return TranslationOverrides.string(_root.$meta, 'ticket.cancelAction', {}) ?? 'Cancel';
			case 'ticket.cancelActionTitle': return TranslationOverrides.string(_root.$meta, 'ticket.cancelActionTitle', {}) ?? 'Confirm Ticket Cancellation';
			case 'ticket.cancelActionContent': return TranslationOverrides.string(_root.$meta, 'ticket.cancelActionContent', {}) ?? 'This action cannot be undone. Are you sure?';
			case 'ticket.cancelSuccess': return TranslationOverrides.string(_root.$meta, 'ticket.cancelSuccess', {}) ?? 'Ticket canceled';
			case 'ticket.showDetails': return TranslationOverrides.string(_root.$meta, 'ticket.showDetails', {}) ?? 'Show Details';
			case 'ticket.selectATicket': return TranslationOverrides.string(_root.$meta, 'ticket.selectATicket', {}) ?? 'No ticket selected';
			case 'ticket.empty': return TranslationOverrides.string(_root.$meta, 'ticket.empty', {}) ?? 'No tickets available';
			case 'ticket.total': return TranslationOverrides.string(_root.$meta, 'ticket.total', {}) ?? 'Total';
			case 'ticket.date': return TranslationOverrides.string(_root.$meta, 'ticket.date', {}) ?? 'Date';
			case 'ticket.all': return TranslationOverrides.string(_root.$meta, 'ticket.all', {}) ?? 'All';
			case 'ticket.stands': return TranslationOverrides.string(_root.$meta, 'ticket.stands', {}) ?? 'Lotttery Stands';
			case 'sales.title': return TranslationOverrides.string(_root.$meta, 'sales.title', {}) ?? 'Sales';
			case 'sales.stand': return TranslationOverrides.string(_root.$meta, 'sales.stand', {}) ?? 'Stands';
			case 'sales.options': return TranslationOverrides.string(_root.$meta, 'sales.options', {}) ?? 'Options';
			case 'sales.all': return TranslationOverrides.string(_root.$meta, 'sales.all', {}) ?? 'All';
			case 'sales.date': return TranslationOverrides.string(_root.$meta, 'sales.date', {}) ?? 'Date';
			case 'sales.groups': return TranslationOverrides.string(_root.$meta, 'sales.groups', {}) ?? 'Groups';
			case 'sales.lotteries': return TranslationOverrides.string(_root.$meta, 'sales.lotteries', {}) ?? 'Lotteries';
			case 'sales.bank': return TranslationOverrides.string(_root.$meta, 'sales.bank', {}) ?? 'Banks';
			case 'sales.sales': return TranslationOverrides.string(_root.$meta, 'sales.sales', {}) ?? 'Profits';
			case 'sales.prizes': return TranslationOverrides.string(_root.$meta, 'sales.prizes', {}) ?? 'Prizes';
			case 'sales.balance': return TranslationOverrides.string(_root.$meta, 'sales.balance', {}) ?? 'Balance';
			case 'sales.total': return TranslationOverrides.string(_root.$meta, 'sales.total', {}) ?? 'Total';
			case 'result.add': return TranslationOverrides.string(_root.$meta, 'result.add', {}) ?? 'Add';
			case 'result.edit': return TranslationOverrides.string(_root.$meta, 'result.edit', {}) ?? 'Edit';
			case 'result.date': return TranslationOverrides.string(_root.$meta, 'result.date', {}) ?? 'Date';
			case 'result.lottery': return TranslationOverrides.string(_root.$meta, 'result.lottery', {}) ?? 'Lottery';
			case 'result.group': return TranslationOverrides.string(_root.$meta, 'result.group', {}) ?? 'Group';
			case 'result.stand': return TranslationOverrides.string(_root.$meta, 'result.stand', {}) ?? 'Stand';
			case 'result.firstPrize': return TranslationOverrides.string(_root.$meta, 'result.firstPrize', {}) ?? 'First number';
			case 'result.secondPrize': return TranslationOverrides.string(_root.$meta, 'result.secondPrize', {}) ?? 'Second number';
			case 'result.thirdPrize': return TranslationOverrides.string(_root.$meta, 'result.thirdPrize', {}) ?? 'Third number';
			case 'result.empty': return TranslationOverrides.string(_root.$meta, 'result.empty', {}) ?? 'No results available';
			case 'result.confirmation.title': return TranslationOverrides.string(_root.$meta, 'result.confirmation.title', {}) ?? 'Are you sure you want to confirm the results?';
			case 'result.confirmation.yes': return TranslationOverrides.string(_root.$meta, 'result.confirmation.yes', {}) ?? 'Yes';
			case 'result.confirmation.no': return TranslationOverrides.string(_root.$meta, 'result.confirmation.no', {}) ?? 'No';
			case 'settings.title': return TranslationOverrides.string(_root.$meta, 'settings.title', {}) ?? 'Settings';
			case 'settings.theme': return TranslationOverrides.string(_root.$meta, 'settings.theme', {}) ?? 'Theme';
			case 'settings.dark': return TranslationOverrides.string(_root.$meta, 'settings.dark', {}) ?? 'Dark';
			case 'settings.light': return TranslationOverrides.string(_root.$meta, 'settings.light', {}) ?? 'Light';
			case 'settings.success': return TranslationOverrides.string(_root.$meta, 'settings.success', {}) ?? 'Settings updated';
			case 'settings.options.tickets': return TranslationOverrides.string(_root.$meta, 'settings.options.tickets', {}) ?? 'Tickets';
			case 'settings.options.stand': return TranslationOverrides.string(_root.$meta, 'settings.options.stand', {}) ?? 'Stands';
			case 'settings.options.lottery': return TranslationOverrides.string(_root.$meta, 'settings.options.lottery', {}) ?? 'Lotteries';
			case 'settings.options.group': return TranslationOverrides.string(_root.$meta, 'settings.options.group', {}) ?? 'Groups';
			case 'settings.options.consortium': return TranslationOverrides.string(_root.$meta, 'settings.options.consortium', {}) ?? 'Consortium';
			default: return null;
		}
	}
}
